"""
Django settings for ma_value project.

Generated by 'django-admin startproject' using Django 2.0.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

from os.path import abspath, dirname, join, normpath
from os import environ
from sys import path

from django.utils.translation import ugettext_lazy as _

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = dirname(dirname(dirname(abspath(__file__))))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '#=6k0k1y35qacu0)wdx4*^hh2$&h#d5dxi@)jm^(&v6g^^svj&'

# Add system/ to the Python path
# ============================
path.append(normpath(join(BASE_DIR, 'system')))

PROJECT_TEMPLATES = [
    join(BASE_DIR, 'templates'),
]

PATH_PROXIES = join(
    BASE_DIR,
    "system/apps/scrapy_app/proxies.txt")

TMP_FOLDER = join(
    BASE_DIR,
    "system/tmp")

PATH_ITEMS_BY_ENGINE = join(
    BASE_DIR,
    "system/data/items_by_engine.json")

PATH_ITEMS_BY_STORE = join(
    BASE_DIR,
    "system/data/items_by_store.json")

PATH_FORM_TYPE_BY_ITEM = join(
    BASE_DIR,
    "system/data/form_type_by_item.json")

PATH_SMARTPHONES = join(
    BASE_DIR,
    "system/data/DB_Smartphones.csv")

PATH_RF_PKL = join(
    BASE_DIR,
    "system/data/RF.pkl")

PATH_FAKE_USER_AGENT = join(
    BASE_DIR,
    "system/data/fake_useragent.json")

PATH_CAPTAIN = join(
    BASE_DIR,
    "system/data/Captain.csv")

PATH_ANGELO = join(
    BASE_DIR,
    "system/data/Angelo.csv")

PATH_CORDON = join(
    BASE_DIR,
    "system/data/Cordon.csv")

PATH_DIC_REPARATION = join(
    BASE_DIR,
    "system/data/DicReparation.csv")

PATH_DIL = join(
    BASE_DIR,
    "system/data/DIL.csv")

PATH_SAVE = join(
    BASE_DIR,
    "system/data/Save.csv")

PATH_CERT = join(
    BASE_DIR,
    "system/data/client_ssl.pem")

PATH_DATA_GFK = join(
    BASE_DIR,
    "system/data/lista_categorias_marcas.csv")

# environ['SCRAPY_SETTINGS_MODULE'] = 'apps.scrapy_app.scrapy_app.settings'

# Application definition
DJANGO_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.sites',
    'django.contrib.staticfiles',
]

DEVELOPED_APPS = [
    'apps.api',
    'apps.aws',
    'apps.home',
    'apps.items',
    'apps.ma_items',
    'apps.ma_companies',
    'apps.ma_profiles',
    'apps.proxies',
    'apps.reparation_baremo_model',
    'apps.reparation_ml_model',
    'apps.scrapy_app',
    'apps.scrapy_model',
    'apps.scrapy_urls',
    'apps.second_hand_model',
    'apps.stores',
    'apps.tasks',
    'apps.users',
]

THIRD_PARTY_APPS = [
    "django_rq",
    'corsheaders',
    'rest_framework',
    'allauth',
    'allauth.account',
    'allauth.socialaccount'
]

INSTALLED_APPS = DJANGO_APPS + DEVELOPED_APPS + THIRD_PARTY_APPS

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.locale.LocaleMiddleware'
]

ROOT_URLCONF = 'ma_value.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': PROJECT_TEMPLATES,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.static',
                'django.template.context_processors.media',
            ],
        },
    },
]

WSGI_APPLICATION = 'ma_value.wsgi.application'

# This site's ID
# ==============
SITE_ID = 1

# ------ Config "channels"
# ASGI_APPLICATION = "ma_value.routing.application"

# Configuration channel layers
# CHANNEL_LAYERS = {
#     "default": {
#         "BACKEND": "channels_redis.core.RedisChannelLayer",
#         "CONFIG": {
#             "hosts": [("localhost", 6379)],
#         },
#     },
# }


STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

# Restricts languages
LANGUAGES = [
    ('fr', _('French')),
    ('en', _('English'))
]

# Where Django looks for translation files
LOCALE_PATHS = [
    join(BASE_DIR, "locale")
]

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'

# ---- Core Variables

# Module stores
EXPORT_DATA_TO_HTMLS_TMP = False
SHOULD_PRINT_DEBUG = False
WEBSITES_APP_MODEL = "stores.Store"
WEBSITES_APP = "stores"
WEBSITES_MODEL = "Store"

# Module second_hand_model
REPARATION_SECOND_HAND_PARENT_MODEL = "tasks.Job"

# Module reparation ml_model
REPARATION_ML_PARENT_MODEL = "tasks.Job"

# Module reparation baremo_model
REPARATION_BAREMO_PARENT_MODEL = "tasks.Job"

# Module scrapy_urls
SCRAPY_URLS_PARENT_MODEL = "tasks.Job"

# Module scrapy_app
DEFAULT_NUM_ITEMS = 5
BIG_NUM_ITEMS = 30

# Module scrapy_model
SUBSTITUTION_SIMILAR_PARENT_MODEL = "tasks.Job"

# Module gfk
GFK_PARENT_MODEL = "tasks.Job"

# Module MA items
MA_TEMP_MODEL_PARENT = "tasks.Job"

# Module proxies
PROXIES_APP_MODEL = "proxies.Proxy"
PROXIES_APP = "proxies"
PROXIES_MODEL = "Proxy"

# Module core
SCRAPY_CRAWLERS_CONTROL_API = False
WEBSTORES_MODULE = "apps.stores.webstores"

# External API
EXTERNAL_API_ITEMS = "GFK"

# Model User
# ==========
AUTH_USER_MODEL = 'users.User'

# ---- Third packages

# Django allauth
ACCOUNT_AUTHENTICATION_METHOD =  "username_email"

ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_EMAIL_REQUIRED = True
